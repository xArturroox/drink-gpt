name: Pull Request Checks

on:
  pull_request:
    branches: [ master ]

jobs:
  frontend:
    name: Frontend Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/.nvmrc
      
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Lint
        working-directory: ./frontend
        run: npm run lint
      
      - name: Unit Tests with Coverage
        working-directory: ./frontend
        run: npm run test:coverage
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage/
          retention-days: 7

  backend:
    name: Backend Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: Run Integration Tests
        working-directory: ./backend
        run: mvn verify
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: backend/target/surefire-reports/
          retention-days: 7

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    env:
      NODE_ENV: integration
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/.nvmrc
      
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Install Playwright browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps chromium
      
      - name: Start Backend
        working-directory: ./backend
        run: mvn spring-boot:run &
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      
      - name: Wait for backend to start
        run: |
          echo "Waiting for backend to start..."
          timeout=60
          while ! nc -z localhost 8080 && [ $timeout -gt 0 ]; do
            sleep 1
            timeout=$((timeout-1))
          done
          if [ $timeout -eq 0 ]; then
            echo "Backend failed to start within the timeout period"
            exit 1
          fi
      
      - name: Run E2E Tests
        working-directory: ./frontend
        run: npm run test:e2e
      
      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: frontend/playwright-report/
          retention-days: 7

  status-comment:
    name: Update PR Status
    runs-on: ubuntu-latest
    needs: [frontend, backend, e2e]
    if: always()
    steps:
      - name: Create Status Comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { workflow, repo, runId } = context;
            const frontendStatus = '${{ needs.frontend.result }}';
            const backendStatus = '${{ needs.backend.result }}';
            const e2eStatus = '${{ needs.e2e.result }}';
            
            const getStatusEmoji = (status) => {
              if (status === 'success') return '✅';
              if (status === 'skipped') return '⏭️';
              return '❌';
            };
            
            const runUrl = `https://github.com/${repo.owner}/${repo.repo}/actions/runs/${runId}`;
            
            const statusTable = `
            ## Pull Request Checks Summary
            
            | Check | Status |
            | ----- | ------ |
            | Frontend Linting & Tests | ${getStatusEmoji(frontendStatus)} |
            | Backend Integration Tests | ${getStatusEmoji(backendStatus)} |
            | E2E Tests | ${getStatusEmoji(e2eStatus)} |
            
            [View details in GitHub Actions](${runUrl})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: statusTable
            }); 